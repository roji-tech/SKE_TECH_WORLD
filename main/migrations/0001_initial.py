# Generated by Django 5.0.7 on 2024-08-31 19:43

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('role', models.CharField(choices=[('superadmin', 'Super Admin'), ('owner', 'School Owner'), ('admin', 'Admin'), ('teacher', 'Teacher'), ('student', 'Student')], max_length=10)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('image', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(default='+234----', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('address', models.TextField(default='')),
                ('phone', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=254)),
                ('logo', models.URLField(default='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('short_name', models.CharField(blank=True, max_length=6, null=True)),
                ('owner', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='school', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AcademicSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('next_session_begins', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('max_exam_score', models.SmallIntegerField(default=60)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_sessions', to='main.school')),
            ],
            options={
                'unique_together': {('school', 'name')},
            },
        ),
        migrations.CreateModel(
            name='SchoolClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('KG1', 'Kindergarten 1'), ('KG2', 'Kindergarten 2'), ('KG3', 'Kindergarten 3'), ('PRY1', 'Primary 1'), ('PRY2', 'Primary 2'), ('PRY3', 'Primary 3'), ('PRY4', 'Primary 4'), ('PRY5', 'Primary 5'), ('PRY6', 'Primary 6'), ('JS1', 'Junior Secondary 1'), ('JS2', 'Junior Secondary 2'), ('JS3', 'Junior Secondary 3'), ('SS1', 'Senior Secondary 1'), ('SS2', 'Senior Secondary 2'), ('SS3', 'Senior Secondary 3')], max_length=4)),
                ('division', models.CharField(blank=True, choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('E', 'E'), ('F', 'F'), ('G', 'G'), ('H', 'H'), ('I', 'I'), ('J', 'J'), ('K', 'K'), ('L', 'L'), ('M', 'M'), ('N', 'N'), ('O', 'O'), ('P', 'P'), ('Q', 'Q'), ('R', 'R'), ('S', 'S'), ('T', 'T'), ('U', 'U'), ('V', 'V'), ('W', 'W'), ('X', 'X'), ('Y', 'Y'), ('Z', 'Z')], max_length=10, null=True)),
                ('category', models.CharField(blank=True, choices=[('ART', 'Art Class'), ('SCIENCE', 'Science Class'), ('COMMERCIAL', 'Commercial Class')], max_length=12, null=True)),
                ('academic_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='main.academicsession')),
            ],
        ),
        migrations.CreateModel(
            name='LessonPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_file', models.FileField(upload_to='uploads/%Y/%m/%d/')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_files', to=settings.AUTH_USER_MODEL)),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.schoolclass')),
            ],
        ),
        migrations.CreateModel(
            name='ClassNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attachment', models.URLField()),
                ('lesson_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_notes', to='main.lessonplan')),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='main.schoolclass')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grading_system', models.TextField()),
                ('attendance_policy', models.TextField()),
                ('school', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='main.school')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_no', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('student_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('date_of_birth', models.DateField()),
                ('admission_date', models.DateField(default=datetime.date.today)),
                ('academic_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.academicsession')),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='main.school')),
                ('student_class', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='students', to='main.schoolclass')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('school_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='main.schoolclass')),
            ],
        ),
        migrations.AddField(
            model_name='lessonplan',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_plans', to='main.subject'),
        ),
        migrations.CreateModel(
            name='GmeetClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('gmeet_link', models.URLField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gmeet_classes', to='main.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(blank=True, max_length=15, null=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teachers', to='main.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='subject',
            name='teacher',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subjects', to='main.teacher'),
        ),
        migrations.AddField(
            model_name='schoolclass',
            name='class_teacher',
            field=models.ForeignKey(blank=True, limit_choices_to={'user__role': 'teacher'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='school_class', to='main.teacher'),
        ),
        migrations.AlterUniqueTogether(
            name='subject',
            unique_together={('school_class', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='schoolclass',
            unique_together={('academic_session', 'name', 'division')},
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('1st', '1st Term'), ('2nd', '2nd Term'), ('3rd', '3rd Term')], max_length=4)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('next_term_begins', models.DateField(blank=True, null=True)),
                ('academic_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms', to='main.academicsession')),
            ],
            options={
                'unique_together': {('academic_session', 'name')},
            },
        ),
    ]
